FROM ubuntu:20.04

# ----- Setup Enviornment ----- #
# get basics
USER root 

ARG DEBIAN_FRONTEND=noninteractive

RUN apt-get update && apt-get install -y sudo sshfs bsdutils python3-dev \
                            libpq-dev pkg-config zlib1g-dev libtool libtool-bin wget automake autoconf coreutils bison libacl1-dev \
                            qemu-user qemu-kvm socat \
                            postgresql-client nasm binutils-multiarch llvm clang \
                            libpq-dev parallel libgraphviz-dev \
                            build-essential libxml2-dev libxslt1-dev git \
                            libffi-dev cmake libreadline-dev libtool ruby netcat iproute2 openvpn sshpass patchelf elfutils

# rename main user to pwndevil
USER root
RUN apt-get install -y zsh && \
    useradd -s /bin/bash -m pwn 

# install sudo
RUN apt-get update && \
    apt-get install sudo -y && \ 
    echo "pwn ALL=NOPASSWD: ALL" > /etc/sudoers.d/pwn

USER pwn

WORKDIR /tmp
COPY files /tmp/files

WORKDIR /home/pwn 
RUN sh -c "$(wget -O- https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)" && \
    sudo chsh -s $(which zsh) pwn && \
    cp /tmp/files/zsh/.zshrc /home/pwn && \ 
    git clone https://github.com/zsh-users/zsh-autosuggestions ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-autosuggestions

WORKDIR /home/pwn/.oh-my-zsh/themes
RUN git clone https://github.com/dracula/zsh.git dracula && \
    ln -s dracula/dracula.zsh-theme dracula.zsh-theme

WORKDIR /home/pwn
RUN chmod -R 0771 /home/pwn



USER root 
RUN apt-get update && apt-get install -y ipython3 python3-pip && \
    apt-get install -y build-essential libtool g++ gcc \
    texinfo curl wget automake autoconf python python-dev git subversion \
    unzip virtualenvwrapper sudo git virtualenvwrapper ca-certificates

# setup vim to be awesome
RUN apt-get install neovim -y 

USER pwn
WORKDIR /home/pwn
RUN mkdir -p .config/nvim && \
    curl -fLo ~/.local/share/nvim/site/autoload/plug.vim --create-dirs https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim && \
    python3 -m pip install --user neovim && \
    cp /tmp/files/vim/init.vim .config/nvim/ && \
    vim +'PlugInstall --sync' +qa && \
    vim +'UpdateRemotePlugins --sync' +qa

# ----- RE Tools ----- #
USER root

# RUN gem install one_gadget


USER pwn 

RUN python3 -m pip install --user pwntools && \ 
    python3 -m pip install ropper && \
    python3 -m pip install --user ROPGadget && \ 
    python3 -m pip install --user sagemath numpy 

USER root
# install gdb & gef 
RUN apt-get update && \
    apt-get install gdb -y

USER pwn

# pwndbg
RUN git clone https://github.com/pwndbg/pwndbg
WORKDIR /home/pwn/pwndbg
RUN bash setup.sh
WORKDIR /home/pwn
RUN mv pwndbg ~/pwndbg-src && \
    echo "source ~/pwndbg-src/gdbinit.py" > ~/.gdbinit_pwndbg

# peda
RUN git clone https://github.com/longld/peda.git ~/peda

# gef
RUN wget -q -O ~/.gdbinit-gef.py https://github.com/hugsy/gef/raw/master/gef.py && \
    echo source ~/.gdbinit-gef.py >> ~/.gdbinit && \
    cp /tmp/files/gdb/.gdbinit /home/pwn/.gdbinit

USER root
WORKDIR /usr/bin
RUN cp /tmp/files/gdb/gdb-* . && \
    chmod +x /usr/bin/gdb-*


USER root

RUN apt-get update && apt-get install -y \
    tmux \
    xclip 

USER pwn
WORKDIR /home/pwn
RUN git clone https://github.com/gpakosz/.tmux.git && \
    ln -s -f .tmux/.tmux.conf && \
    cp /tmp/files/tmux/.tmux.conf.local /home/pwn

RUN mkdir -p /home/pwn/ctf-tools
WORKDIR /home/pwn/ctf-tools

RUN cp -r /tmp/files/templates /home/pwn/ctf-tools && \
    sudo mv /home/pwn/ctf-tools/templates/make* /usr/bin && \
    sudo chmod +x /usr/bin/makePWN*

# reutils
RUN python3 -m pip install lief --user && \
    python3 -m pip install click --user && \
    git clone https://github.com/Ayrx/reutils.git

# libc database
RUN sudo mv /tmp/files/libc-database . && sudo chown -R pwn libc-database
WORKDIR /home/pwn/ctf-tools

# main arena offset
RUN git clone https://github.com/bash-c/main_arena_offset

# CTFmate
RUN git clone https://github.com/X3eRo0/CTFMate.git 
WORKDIR /home/pwn/ctf-tools/CTFMate
RUN python3 -m pip install -r requirements.txt && chmod +x ctfmate.py
RUN sudo ln -s /home/pwn/ctf-tools/CTFMate/ctfmate.py /usr/bin/ctfmate

WORKDIR /home/pwn
RUN sudo rm -r /tmp/*
USER pwn
ENTRYPOINT [ "/usr/bin/zsh" ]
